import React from 'react';
import { render, screen } from '@testing-library/react';
import { MemoryRouter } from 'react-router-dom';
import PaymentsPage from './paymentform.jsx';
import { BalanceProvider } from '../context/BalanceContext.jsx';
jest.mock('axios', () => ({ __esModule: true, default: { get: jest.fn(), post: jest.fn() } })); // Mock jsPDF and autotable to avoid canvas/DOM workjest.mock("jspdf", () => ({  __esModule: true,  default: jest.fn(() => ({    setFillColor: jest.fn(),    roundedRect: jest.fn(),    setFont: jest.fn(),    setTextColor: jest.fn(),    setFontSize: jest.fn(),    text: jest.fn(),    getTextWidth: () => 30,    setDrawColor: jest.fn(),    setLineWidth: jest.fn(),    internal: { pageSize: { getWidth: () => 420 } },    lastAutoTable: { finalY: 200 },    save: jest.fn(),  })),}));jest.mock("jspdf-autotable", () => ({ __esModule: true, default: jest.fn() }));function renderPage() {  return render(    <BalanceProvider>      <MemoryRouter>        <PaymentsPage />      </MemoryRouter>    </BalanceProvider>,  );}describe("Payments page", () => {  beforeEach(() => {    jest.clearAllMocks();  });  it("renders billing history and shows download action", async () => {    const axios = (await import("axios")).default;    axios.get.mockResolvedValueOnce({ data: [] }).mockResolvedValueOnce({      data: [        {          _id: "b1",          amount: "100.00",          reference: "REF123",          paidAt: new Date().toISOString(),          paymentMethod: { title: "Visa" },          status: "success",        },      ],    });    renderPage();    await screen.findByText(/Billing History/i);    const dlBtn = await screen.findByTitle(/Download receipt/i);    expect(dlBtn).toBeInTheDocument();  });});
